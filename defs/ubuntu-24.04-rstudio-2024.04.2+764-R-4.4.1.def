Bootstrap: docker
From: ubuntu:noble
Include: apt

%labels
	app.rstudio-version 2024.04.2-764

%help
	This runs R Studio server, and is intended to be used with Open OnDemand.

%apprun quickserve
	exec rserver --server-user "$USER" --server-working-dir "${TMPDIR:-/tmp}" --server-data-dir "${TMPDIR:-/tmp}" --database-config-file "${TMPDIR:-/tmp}/rstudio-database.conf" --www-address 0.0.0.0 --www-port "${RSTUDIO_PORT:-7070}"

%apprun rserve
	exec rserver "${@}"

%runscript
	exec rserver "${@}"

%environment
	export PATH=/usr/lib/rstudio-server/bin:${PATH}

%post
# Avoids errors from debconf later in build
export DEBIAN_FRONTEND=noninteractive
apt-get update -y
apt-get upgrade -y

apt-get install -y \
	curl \
	wget \

# LET US AVOID THE DEBACLE FROM LAST TIME
apt-get install -y hostname


# We install this collection of build tools so that packages with C/C++/Fortran compiled components can still be installed.
apt-get install -y \
	build-essential \
	gcc-12-locales \
	gfortran \
	binfmt-support \
	tcl \
	autoconf \
	automake \
	libtool \
	flex \
	bison \
	git \
	bzr \
	less \
	libxml2-utils \
	debhelper \
	zlib \

# Crisis tools https://www.brendangregg.com/blog/2024-03-24/linux-crisis-tools.html
apt-get install -y \
	procps \
	sysstat \
	iproute2 \
	numactl \
	tcpdump \
	util-linux \
	linux-tools-common \
	linux-tools-generic \
	cpuid \
	msr-tools \
	nicstat \
	ethtool \
	tiptop \

# Let's skip these ones
:	bpfcc-tools \
	bpftrace \
	trace-cmd \

# My additions for diagnostics
apt-get install -y \
	strace \
	ltrace \
	nmap \
	ncat \


# Generate locales to avoid errors
# We can add more here if language support is desired
# and we need at least one
# but they take a while to generate
apt-get install -y locales
locale-gen \
	en_GB.UTF-8 \

update-locale


# R Studio Server install instructions, from: http://cran.rstudio.com/bin/linux/ubuntu/
apt-get install -y --no-install-recommends software-properties-common dirmngr

# add the signing key (by Michael Rutter) for these repos
# To verify key, run gpg --show-keys /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc 
# Fingerprint: E298A3A825C0D65DFD57CBB651716619E084DAB9
curl -sL https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc

# add the R 4.0 repo from CRAN -- adjusts 'focal' to 'groovy' or 'bionic' etc as needed
add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"

apt-get install -y --no-install-recommends r-base

# Install the tool for installing deb files with dependency resolution
apt-get install -y --no-install-recommends gdebi-core

# Now grab the R Studio deb
curl -sLO https://download2.rstudio.org/server/jammy/amd64/rstudio-server-2024.04.2-764-amd64.deb 

gdebi --non-interactive rstudio-server-2024.04.2-764-amd64.deb

# Set up the database conf properly
chmod a+r /etc/rstudio/database.conf
printf \
"
provider=sqlite
directory='~/.rstudio/db.sqlite'
" \
	>>/etc/rstudio/database.conf



rm rstudio-server-2024.04.2-764-amd64.deb

# Remove cache to reduce image size
apt-get clean
